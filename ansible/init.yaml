---
- name: Initialise via Ansible
  hosts: localhost
  become: yes
  roles:
  - geerlingguy.exim
  tasks:
  - name: Copying the setting hostname script
    template:
      src: set-hostname.sh
      dest: /usr/local/bin/set-hostname.sh
      mode: '0544'
  - name: Setting the hostname
    command: /usr/local/bin/set-hostname.sh
    become: yes
    become_user: root
  - name: Install packages
    package:
      name: "{{ item }}"
      state: present
    with_items: "{{ pkgs }}"
  - name: Define glbal export for current tag
    template:
      src=profile-platform-v-var.sh
      dest=/etc/profile.d/platform-v-var.sh
      mode=544
      owner=pi
  - name: Copy Ansible service config
    template:
      src=ansible.service
      dest=/lib/systemd/system/ansible.service
      mode=644
  - name: Reload systemctl to re-read configs
    systemd:
      name: ansible.service
      daemon_reload: yes
      state: started
      enabled: yes
      masked: no
  - name: Copy Support service start script
    template:
      src=support-start.sh
      dest=/usr/local/bin/support-start.sh
      mode=544
      owner=pi
  - name: Copy Support service startup script
    template:
      src=support-stop.sh
      dest=/usr/local/bin/support-stop.sh
      mode=544
      owner=pi
  - name: Copy Support service config
    template:
      src=support.service
      dest=/lib/systemd/system/support.service
      mode=644
  - name: Reload systemctl to re-read configs
    systemd:
      name: support.service
      daemon_reload: yes
      enabled: no
      masked: no
  - name: Copy ProFTPD service config
    template:
      src=proftpd-jobCache.conf
      dest=/etc/proftpd/conf.d/jobCache.conf
  - name: Restarting ProFTPD
    systemd:
      name: proftpd.service
      state: restarted
  - name: Generate /home/pi/.ssh/ RSA host key
    command : ssh-keygen -q -t rsa -b 4096 -f /home/pi/.ssh/id_rsa -N ""
    become: true
    become_user: pi
    args:
      creates: /home/pi/.ssh/id_rsa
  - name: Add the Support public key to the host
    template:
      src: authorized_keys
      dest: /home/pi/.ssh/authorized_keys
      owner: pi
      group: pi
      mode: '0644'
  - name: Ensure journalctl writes files to disk
    lineinfile:
      name: /etc/systemd/journald.conf
      regexp: '^Storage='
      line: Storage=persistent
  - name: Cron job to keep the journalctl file low
    cron:
      user: root
      name: "clean logs"
      minute: "*/5"
      job: "journalctl --vacuum-size=100M"
